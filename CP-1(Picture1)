import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np


# Задаємо стиль графіків
plt.style.use('default')
sns.set_palette("viridis")


# Створюємо DataFrame із згенерованими даними (емуляція)
np.random.seed(42)  # Для відтворюваності результатів
size = 100


# Генерація даних з певними кореляціями
hours = np.random.normal(5, 1.5, size)
attendance = np.clip(hours * 8 + np.random.normal(30, 10, size), 0, 128)
exam = np.clip(hours * 7 + attendance * 0.3 + np.random.normal(0, 8, size), 0, 100)
satisfaction = np.clip(exam * 0.1 + np.random.normal(5, 2, size), 0, 10)
add_courses = np.random.normal(10, 5, size)
add_courses = np.clip(add_courses, 0, 25)


df = pd.DataFrame({
   'study_hours': hours,
   'attendance_rate': attendance,
   'exam_score': exam,
   'satisfaction': satisfaction,
   'add_courses': add_courses
})


# Розрахунок кореляційної матриці
corr_matrix = df.corr()


# Побудова теплової карти
plt.figure(figsize=(10, 8))
heatmap = sns.heatmap(corr_matrix,
                     annot=True,  # Додати числа на клітинки
                     fmt=".2f",   # Формат чисел: два знаки після коми
                     cmap='RdYlBu_r', # Кольорова схема (red-yellow-blue, reversed)
                     center=0,    # Центрувати кольори на 0
                     square=True,
                     linewidths=0.5,
                     cbar_kws={"shrink": .8})


plt.title('Теплова карта кореляційної матриці\n(Коефіцієнт кореляції Пірсона)', pad=20, fontsize=16)
plt.xticks(rotation=45, ha='right')
plt.yticks(rotation=0)
plt.tight_layout()
plt.show()
